a. Graphen sind n viele Node mit 0 bis n verweise auf andere Nodes

es gibt ungerichtet Graphen, Nodes verweisen auf sich gegenseitig

Gerichtet Graphen : Nodes verweisen nur in eine richtung

Gewichtete Graphen: Nodes mit bestimmter Anzahl an maximalen verwiesenen Nodes
                    können gerichtet oder ungerichtet sein.


b.

V = {1, 2, 3, 4, 5},
E = {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {3, 4}, {4, 5}} 


  | 1 | 2 | 3 | 4 | 5 |
_______________________________
 1|    
_______________________________
 2| x |
_______________________________
 3| x |
_______________________________
 4| x | x | x |   | x |
_______________________________
 5| x | x |

Der Hinweis stand zu weit unten, aber die Darstellung ähnelt eh schon einer matrix ;)


c.
edgeList:      = {5, 8, 1, 2, 1, 3, 1, 4, 1, 5, 2, 4, 2, 5, 3, 4, 4, 5}
verticeList:   = {5, 8, 4, 2, 3, 4, 5, 3, 1, 4, 5, 2, 1, 4, 4, 1, 2, 3, 5}  // bei ungerichteten bei jedem knoten alle verknüpfungen ein getragen 1 -> 2 = 2 -> 1;

Adjazenzmatrix:


    | 1 | 2 | 3 | 4 | 5 |

    _____________________
 1  | 0 | 0 | 0 | 0 | 0 |   
    _____________________
 2  | 1 | 0 | 0 | 0 | 0 |
    _____________________
 3  | 1 | 0 | 0 | 0 | 0 |
    _____________________
 4  | 1 | 1 | 1 | 0 | 1 |
    _____________________
 5  | 1 | 1 | 0 | 0 | 0 |



Adjazenzliste:

1) -> 2 -> 3 -> 4 -> 5
2) -> 4 -> 5
3) -> 4
4) -> 5
5) -> null


b)
O(n)   n := Anzahl der Edges


public static int[][] EdgeListToAdjMatrix (int[] EdgeList, boolean isDirectional){
		// O(n)   n := Edges
		int NumVertices = EdgeList[0];
		int[][] AdjMatrix_ = new int[NumVertices][NumVertices];
		for(int i = 2; i < EdgeList.length -1; i+=2){
			int Node1 = EdgeList[i];
			int Node2 = EdgeList[i+1];

			AdjMatrix_[Node1-1][Node2-1] = 1;
			//for undirected Graphs they are connected in both ways 1 -> 2 and 2 -> 1
			if(isDirectional == false){
				AdjMatrix_[Node2-1][Node1-1] = 1;
			}			
		}
		return AdjMatrix_;
	}

	public static ArrayList<Integer>[] EdgeListToAdjList (int[] EdgeList){
		int NumVertices = EdgeList[0];
		ArrayList<Integer>[] AdjList = new ArrayList[NumVertices+1];
		for(int i = 2; i < EdgeList.length -1; i += 2){
			int Node1 = EdgeList[i];
			if(AdjList[Node1] == null){
				AdjList[Node1] = new ArrayList<Integer>();
			}
			AdjList[Node1].add(EdgeList[i+1]);
		}

		return AdjList;
	}
